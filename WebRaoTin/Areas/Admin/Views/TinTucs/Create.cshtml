@model WebRaoTin.ViewModel.TinTucsViewModel



@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .formCreate {
        width: 70%;
        padding: 20px;
        border-radius: 5px;
    }

    #displayImg img {
        height: 50px;
        width: 50px;
        margin-right: 10px;
        display: inline-block;
        margin-top: 2px;
        margin-bottom: 2px;
    }

    .formall {
        display: flex;
        padding: 5px;
        font-family: Arial, Helvetica, sans-serif;
    }

    .Noidungmau {
        padding: 10px 10px;
    }

    .khungMau h4 {
        background-color: rgb(204, 204, 204);
        margin-top: 0;
        padding: 10px;
        font-weight: bold;
    }

    .NewsEX {
        height: 50%;
        width: 30%;
        margin-left: 2px;
        border: 1px solid lightgrey;
    }

    .Noidungmau a {
        text-decoration: none;
    }
</style>

@using (Html.BeginForm("Create", "TinTucs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <div class="row rowbtn-create">
        <div  title="nhấn vào để đăng tin theo chủ đề bạn chọn" class="col img-dv" id = "boxDV" onclick="clickDV()">Dịch vụ</div>
        <div  title="nhấn vào để đăng tin theo chủ đề bạn chọn" class="col img-vl" id = "boxVL" onclick="clickVL()">Tìm việc</div>   
        <div  title="nhấn vào để đăng tin theo chủ đề bạn chọn" id = "boxSP" class="col img-sp" onclick="clickSP()">Sản phẩm</div>
        <div  title="nhấn vào để đăng tin theo chủ đề bạn chọn" id = "boxBDS" class="col img-bds" onclick="clickBDS()" >Bất động sản</div>   
    </div>

    <div class="form-group">
        <select class="target" id="LuaChon" name="LuaChon" aria-invalid="false">
            <option value="0"> ======Xin hãy chọn loại tin tức=======</option>
            <option value="1"> Sản Phẩm</option>
            <option value="2"> Dịch Vụ</option>
            <option value="3"> Bất Động Sản</option>
            <option value="4"> Việc Làm</option>
        </select>
        @Html.ValidationMessageFor(model => model.LuaChon, "", new { @class = "text-danger" })
    </div>

    @*Tin tức*@

    @*<div class='response5' data-response="op5">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.EndDayTinTucs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndDayTinTucs, new
               {
                   
                   @type = "date",
                   @class = "form-control datepicker"
               })
                @Html.ValidationMessageFor(model => model.EndDayTinTucs, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Contract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@



    @* Không chọn gì *@
    <div class='response0' data-response="op0">


    </div>

    @* Sản phẩm *@

<div class='response1' data-response="op1">

    @*<div class="form-group">
        @Html.LabelFor(model => model.DescriptionSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.DescriptionSanPham, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptionSanPham, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="LuaChon">Chọn loại sản phẩm:</label>
        <select class="form-control valid" id="IdLoaiSanPham" name="IdLoaiSanPham" aria-invalid="false">
            @for (int i = 0; i < @ViewBag.SLLoaiSanPhams; i++)
            {
                <option value=@ViewBag.LoaiSanPhams[i].Id> @ViewBag.LoaiSanPhams[i].Name</option>
            }
        </select>
        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiSanPham" data-valmsg-replace="true"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PriceSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.PriceSanPham, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PriceSanPham, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.LocationSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.LocationSanPham, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationSanPham, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.ImageSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="wrapper col-md-10">
            <input type="file" value="" name="image1" id="image1" required title="Chọn đường dẫn hình ảnh" onchange="Images1FileAsURL()" accept="image/jpg" multiple />
            <div id="displayImg1"></div>
        </div>
    </div>
    <hr />*@

    <h2>SẢN PHẨM</h2>
    <hr>
    <div class="formall">
        <div class="formCreate">
            <div class="form-group">
                <label for="TD">Tiêu đề</label>
                <input class="form-control" type="text" id="Title" placeholder="Tóm tắt ngắn gọn nội dung, tiêu đề tiếng việt có dấu." name="Title" value="">
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="sel1">Chọn loại sản phẩm:</label>
                        <select class="form-control" id="IdLoaiSanPham" name="IdLoaiSanPham" aria-invalid="false">
                            @for (int i = 0; i < @ViewBag.SLLoaiSanPhams; i++)
                            {
                                <option value=@ViewBag.LoaiSanPhams[i].Id> @ViewBag.LoaiSanPhams[i].Name</option>
                            }
                        </select>
                        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiSanPham" data-valmsg-replace="true"></span>
                    </div>

                    <div class="col-md-6">
                        <label for="TD">Ngày hết hạn tin tức</label>
                        @Html.TextBoxFor(model => model.EndDayTinTucs, new
                       {

                            @type = "date",
                           @class = "form-control"
                       })
                        @Html.ValidationMessageFor(model => model.EndDayTinTucs, "", new { @class = "text-danger" })


                    </div>

                </div>

            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="TD">Người liên hệ</label>
                        <input class="form-control" type="text" id="Contract" name="Contract" value="" data-val="true" data-val-required="The Thông tin liên lạc field is required.">
                        @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        <label for="TD">Số điện thoại</label>
                        <input class="form-control" type="text" data-val="true" data-val-required="The Số điện thoại liên hệ field is required." id="ContractPhoneNumber" name="ContractPhoneNumber" value="">
                        @Html.ValidationMessageFor(model => model.ContractPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="comment">Nội dung</label>
                <textarea class="form-control" rows="10" id="DescriptionSanPham" placeholder="Yêu cầu người đăng tin, điền nội dung chính xác!" name="DescriptionSanPham"></textarea>
                @Html.ValidationMessageFor(model => model.DescriptionSanPham, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label for="TD">Giá</label>
                        <input class="form-control" type="number" id="PriceSanPham" name="PriceSanPham">
                        @Html.ValidationMessageFor(model => model.PriceSanPham, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-9">
                        <label for="TD">Nơi bán</label>
                        <input class="form-control" type="text" id="LocationSanPham" name="LocationSanPham">
                        @Html.ValidationMessageFor(model => model.LocationSanPham, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="image4">Chọn hình <i style="color: rgb(122, 120, 120);font-weight: normal;">[tối đa 4 ảnh]</i></label>
                        <input type="file" value="image1" name="image1" id="image1" required title="Chọn đường dẫn hình ảnh" onchange="Images1FileAsURL()" multiple />
                        <div id="displayImg1"></div>
                    </div>

                </div>
            </div>
            <hr>
            <div class="form-group">
                <div style="text-align: right">
                    <input type="submit" value="Thêm" id="Create" class="btn btn-success" />
                </div>
            </div>
        </div>

        <div class="NewsEX">
            <div class="khungMau">
                <h4>Tin đăng mẫu</h4>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a> Cho thuê Xe Inova mới mua 2015, Ford 16 chỗ 2016, giá rẻ </a></p>
                    Cho thuê xe 7 chỗ, Innova 2015, Ford Everest 2013, Fortuner 2015, Ford 16 chỗ mới mua. Xe nội thất đẹp, máy lạnh tốt, dàn âm thanh cực hay, giao xe tận nơi, thủ tục nhanh gọn, giá cực rẻ.<br>
                    - Giá từ: 500 đến 1 triệu/ ngày <br>
                    - Cho thuê tự lái hoặc có tài xế <br>
                </div>
                <hr>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a> Cho thuê xe du lịch từ 7 đến 29 chỗ giá rẻ tại TPHCM </a></p>
                    Công ty Du lich Hải Hà chuyên cho thuê xe du lịch có tài từ 7 đến 29 chỗ, giá rẻ tại TPHCM, phục vụ tham quan du lịch, cưới hỏi, thăm thân nhân, đưa đón sân bay. Xe máy lạnh đời mới, tài xế nhiệt tình vui vẻ, rành đường Việt Nam. Quý khách có nhu cầu xin liên hệ với chúng tôi.
                </div>
            </div>
        </div>
    </div>
</div>
    
    @* Dịch Vụ *@

<div class='response2' data-response="op2">

    @*<div class="form-group">
        @Html.LabelFor(model => model.DescriptionDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.DescriptionDichVu, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptionDichVu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="LuaChon">Chọn loại dịch vụ:</label>
        <select class="form-control valid" id="IdLoaiDichVu" name="IdLoaiDichVu" aria-invalid="false">
            @for (int i = 0; i < @ViewBag.SLLoaiDichVus; i++)
            {
                <option value=@ViewBag.LoaiDichVus[i].Id> @ViewBag.LoaiDichVus[i].Name</option>
            }
        </select>
        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiDichVu" data-valmsg-replace="true"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PriceDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PriceDichVu, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PriceDichVu, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.LocationDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.LocationDichVu, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationDichVu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="wrapper col-md-10">
            <input type="file" value="" name="image2" id="image2" required title="Chọn đường dẫn hình ảnh" onchange="Images2FileAsURL()" multiple />
            <div id="displayImg2"></div>
        </div>
    </div>
    <hr />*@
    <h2>DỊCH VỤ</h2>
    <hr>
    <div class="formall">
        <div class="formCreate">
            <div class="form-group">
                <label for="TD">Tiêu đề</label>
                <input class="form-control" type="text" id="Title" placeholder="Tóm tắt ngắn gọn nội dung, tiêu đề tiếng việt có dấu." name="Title" value="">
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">

                        <label for="sel1">Chọn loại dịch vụ:</label>
                        <select class="form-control" id="IdLoaiDichVu" name="IdLoaiDichVu" aria-invalid="false">
                            @for (int i = 0; i < @ViewBag.SLLoaiDichVus; i++)
                            {
                                <option value=@ViewBag.LoaiDichVus[i].Id> @ViewBag.LoaiDichVus[i].Name</option>
                            }
                        </select>
                        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiDichVu" data-valmsg-replace="true"></span>

                    </div>

                    <div class="col-md-6">
                        <label for="TD">Ngày hết hạn tin tức</label>
                        @Html.TextBoxFor(model => model.EndDayTinTucs, new
                       {

                            @type = "date",
                           @class = "form-control"
                       })
                        @Html.ValidationMessageFor(model => model.EndDayTinTucs, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="TD">Người liên hệ</label>
                        <input class="form-control" type="text" id="Contract" name="Contract">
                        @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        <label for="TD">Số điện thoại</label>
                        <input class="form-control" type="text" id="ContractPhoneNumber" name="ContractPhoneNumber">
                        @Html.ValidationMessageFor(model => model.ContractPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="comment">Nội dung</label>
                <textarea class="form-control" rows="10" id="DescriptionDichVu" name="DescriptionDichVu" placeholder="Yêu cầu người đăng tin, điền nội dung chính xác!"></textarea>
                @Html.ValidationMessageFor(model => model.DescriptionDichVu, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label for="TD">Giá</label>
                        <input class="form-control" type="number" id="PriceDichVu" name="PriceDichVu">
                        @Html.ValidationMessageFor(model => model.PriceDichVu, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-9">
                        <label for="TD">Địa điểm</label>
                        <input class="form-control" type="text" id="LocationDichVu" name="LocationDichVu">
                        @Html.ValidationMessageFor(model => model.LocationDichVu, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="image4">Chọn hình <i style="color: rgb(122, 120, 120);font-weight: normal;">[tối đa 4 ảnh]</i></label>
                        <input type="file" value="" name="image2" id="image2" required title="Chọn đường dẫn hình ảnh" onchange="Images2FileAsURL()" multiple />
                        <div id="displayImg2">

                        </div>
                    </div>

                </div>
            </div>
            <hr>
            <div class="form-group">
                <div style="text-align: right">
                    <input type="submit" value="Thêm" id="Create" class="btn btn-success" />
                </div>
            </div>
        </div>

        <div class="NewsEX">
            <div class="khungMau">
                <h4>Tin đăng mẫu</h4>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a> Phòng khám nha khoa thẩm mỹ, cấy ghép implant uy tín tại TPHCM </a></p>
                    Nha khoa Nụ Cười là trung tâm nha khoa chuyên sâu về răng sứ thẩm mỹ, chỉnh nha, cấy ghép implant uy tín tại TPHCM, Được đăng ký thương hiệu độc quyền, tiêu chuẩn vệ sinh vô trùng đạt chuẩn ISO, ADA.
                    Trong 10 năm liền, chúng tôi luôn được sự tin cậy và ủng hộ của quý khách hàng nhờ thái độ phục vụ chuyên nghiệp và chất lượng dịch vụ vượt trội.<br>
                    - Hạ tầng phòng khám - thiết bị hiện đại <br>
                    - Đội ngũ bác sĩ giỏi chuyên môn, giàu kinh nghiệm <br>
                    - Dịch vụ nha khoa uy tín, chất lượng, có bảo hành <br>
                    - Giá cả bình dân, đa dạng theo dịch vụ <br>
                </div>
            </div>
        </div>
    </div>
</div>


    @* Bất Động Sản *@

<div class='response3' data-response="op3">

    @*<div class="form-group">
        @Html.LabelFor(model => model.DescriptionBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.DescriptionBatDongSan, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptionBatDongSan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="LuaChon">Chọn loại bất động sản:</label>
        <select class="form-control valid" id="IdLoaiBatDongSan" name="IdLoaiBatDongSan" aria-invalid="false">
            @for (int i = 0; i < @ViewBag.SLLoaiBatDongSans; i++)
            {
                <option value=@ViewBag.LoaiBatDongSans[i].Id> @ViewBag.LoaiBatDongSans[i].Name</option>
            }
        </select>
        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiBatDongSan" data-valmsg-replace="true"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PriceBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PriceBatDongSan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PriceBatDongSan, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.LocationBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.LocationBatDongSan, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationBatDongSan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" value="" name="image3" id="image3" required title="Chọn đường dẫn hình ảnh" onchange="Images3FileAsURL()" accept="image/jpg" multiple />
            <div id="displayImg3"></div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VideoBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="wrapper col-md-10">
            <input type="file" value="" name="video" id="video" accept="Video/mp4,Video/wav" required title="Chọn đường dẫn Video" />

        </div>
    </div>
    <hr />*@
    <h2>BẤT ĐỘNG SẢN</h2>
    <hr>
    <div class="formall">
        <div class="formCreate">
            <div class="form-group">
                <label for="TD">Tiêu đề</label>
                <input class="form-control" type="text" id="Title" name="Title" placeholder="Tóm tắt ngắn gọn nội dung, tiêu đề tiếng việt có dấu.">
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">

                        <label for="sel1">Chọn loại bất động sản:</label>
                        <select class="form-control" id="IdLoaiBatDongSan" name="IdLoaiBatDongSan" aria-invalid="false">
                            @for (int i = 0; i < @ViewBag.SLLoaiBatDongSans; i++)
                            {
                                <option value=@ViewBag.LoaiBatDongSans[i].Id> @ViewBag.LoaiBatDongSans[i].Name</option>
                            }
                        </select>
                        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiBatDongSan" data-valmsg-replace="true"></span>

                    </div>

                    <div class="col-md-6">
                        <label for="TD">Ngày hết hạn tin tức</label>
                        @Html.TextBoxFor(model => model.EndDayTinTucs, new
                       {

                            @type = "date",
                           @class = "form-control"
                       })
                        @Html.ValidationMessageFor(model => model.EndDayTinTucs, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="TD">Người liên hệ</label>
                        <input class="form-control" type="text" id="Contract" name="Contract">
                        @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        <label for="TD">Số điện thoại</label>
                        <input class="form-control" type="text" id="ContractPhoneNumber" name="ContractPhoneNumber">
                        @Html.ValidationMessageFor(model => model.ContractPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="comment">Nội dung</label>
                <textarea class="form-control" rows="10" id="DescriptionBatDongSan" name="DescriptionBatDongSan" placeholder="Yêu cầu người đăng tin, điền nội dung chính xác!"></textarea>
                @Html.ValidationMessageFor(model => model.DescriptionBatDongSan, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label for="TD">diện tích</label>
                        <input class="form-control" type="number" placeholder="vd:1300->1300m²" id="Area" name="Area">
                        @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        <label for="TD">Giá</label>
                        <input class="form-control" type="number" id="PriceBatDongSan" name="PriceBatDongSan">
                        @Html.ValidationMessageFor(model => model.PriceBatDongSan, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        <label for="TD">địa điểm</label>
                        <input class="form-control" type="text" id="LocationBatDongSan" name="LocationBatDongSan">
                        @Html.ValidationMessageFor(model => model.LocationBatDongSan, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Chọn hình <i style="color: rgb(122, 120, 120);font-weight: normal;">[tối đa 4 ảnh]</i></label>
                        <input type="file" value="" name="image3" id="image3" required title="Chọn đường dẫn hình ảnh" onchange="Images3FileAsURL()" multiple />
                        <div id="displayImg3"></div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="Video-bds">
                    <label for="">Chọn video</label>
                    <input type="file" value="" name="video" id="video" accept="Video/mp4,Video/wav" required title="Chọn đường dẫn Video" />
                </div>
            </div>

            <hr>
            <div class="form-group">
                <div style="text-align: right">
                    <input type="submit" value="Thêm" id="Create" class="btn btn-success" />
                </div>
            </div>
        </div>

        <div class="NewsEX">
            <div class="khungMau">
                <h4>Tin đăng mẫu</h4>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a> Bán nhà mặt tiền đường số 5, khu dân cư Trung Sơn Bình Chánh </a></p>
                    Bán nhà mặt tiền số 35 đường số 5, khu dân cư Trung Sơn, xã Bình Hưng, huyện Bình Chánh. Hướng chính tây, xinh xinh, kế gần trường Quốc Tế Bắc Mỹ, Singapore, ABC và Đại Học RMIT. Diện tích 5x20m, trệt, 2 lầu, sân thượng, phòng khách, bếp, 7 phòng riêng, 8 WC, tiện kinh doanh văn phòng, nhà nghỉ, căn hộ dịch vụ..., sổ hồng, giá bán 8,5 tỷ (tặng nội thất), thuê lại giá thỏa thuận nếu được.
                </div>
                <hr>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a> Bán gấp căn hộ dự án Nhà Ở Quân Khu 7, Quận 12, 78,88m2, 3PN </a></p>
                    Bán căn hộ dự án Nhà Ở Quân Khu 7, phòng 806 lô A, 3 phòng ngủ, 1 balcon, 1 sân phơi, quý 3/2016 giao nhà, vị trí đẹp, 78,88m2, 14,3tr/m2.<br>
                    - Cơ hội hiếm có và duy nhất! <br>
                    - Căn hộ vị trí cực đẹp, phong thủy tốt nhất. <br>
                    - Phòng 806 lô A, 3 PN, 2 WC, 1 balcon, 1 sân phơi, quý 3/2016 giao nhà. <br>
                    - Địa chỉ: Dự án Nhà Ở Quân Khu 7, Quận 12, TP.HCM. <br>
                </div>
            </div>
        </div>
    </div>
</div>

    @* Việc Làm *@
<div class='response4' data-response="op4">

    @*<div class="form-group">
        @Html.LabelFor(model => model.DescriptioViecLamn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.DescriptioViecLamn, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptioViecLamn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="LuaChon">Chọn loại việc làm:</label>
        <select class="form-control valid" id="IdLoaiViecLam" name="IdLoaiViecLam" aria-invalid="false">
            @for (int i = 0; i < @ViewBag.SLLoaiViecLams; i++)
            {
                <option value=@ViewBag.LoaiViecLams[i].Id> @ViewBag.LoaiViecLams[i].Name</option>
            }
        </select>
        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiViecLam" data-valmsg-replace="true"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Require, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Require, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Require, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Benefit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Benefit, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Benefit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.LocationViecLam, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.LocationViecLam, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationViecLam, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageViecLam, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="wrapper col-md-10">
            <input type="file" value="" name="image4" id="image4" required title="Chọn đường dẫn hình ảnh" onchange="Images4FileAsURL()" multiple />
            <div id="displayImg4"></div>
        </div>
    </div>
    <hr />*@
    <h2>VIỆC LÀM</h2>
    <hr>
    <div class="formall">
        <div class="formCreate">
            <div class="form-group">
                <label for="TD">Tiêu đề</label>
                <input class="form-control" type="text" id="Title" placeholder="Tóm tắt ngắn gọn nội dung, tiêu đề tiếng việt có dấu.">
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">

                        <label for="sel1">Chọn loại việc làm:</label>
                        <select class="form-control" id="IdLoaiViecLam" name="IdLoaiViecLam" aria-invalid="false">
                            @for (int i = 0; i < @ViewBag.SLLoaiViecLams; i++)
                            {
                                <option value=@ViewBag.LoaiViecLams[i].Id> @ViewBag.LoaiViecLams[i].Name</option>
                            }
                        </select>
                        <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiViecLam" data-valmsg-replace="true"></span>

                    </div>

                    <div class="col-md-6">
                        <label for="TD">Ngày hết hạn tin tức</label>
                        @Html.TextBoxFor(model => model.EndDayTinTucs, new
                       {

                            @type = "date",
                           @class = "form-control"
                       })
                        @Html.ValidationMessageFor(model => model.EndDayTinTucs, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="TD">Người liên hệ</label>
                        <input class="form-control" type="text" id="Contract" name="Contract">
                        @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        <label for="TD">Số điện thoại</label>
                        <input class="form-control" type="text" id="ContractPhoneNumber" name="ContractPhoneNumber">
                        @Html.ValidationMessageFor(model => model.ContractPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="comment">Nội dung</label>
                <textarea class="form-control" rows="10" id="DescriptioViecLamn" name="DescriptioViecLamn" placeholder="Yêu cầu người đăng tin, điền nội dung chính xác!"></textarea>
                @Html.ValidationMessageFor(model => model.DescriptioViecLamn, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="comment">Yêu cầu</label>
                <textarea class="form-control" rows="10" id="Require" name="Require" placeholder="thông tin yêu cầu ..."></textarea>
                @Html.ValidationMessageFor(model => model.Require, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="comment">Quyền lợi</label>
                <textarea class="form-control" rows="10" id="Benefit" name="Benefit" placeholder="thông tin về quyền lợi ..."></textarea>
                @Html.ValidationMessageFor(model => model.Benefit, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-5">
                        <label for="TD">Lương</label>
                        <input class="form-control" type="number" id="Salary" name="Salary" placeholder="nhập mức lương tối thiểu, chỉ nhập số">
                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-7">
                        <label for="TD">Địa điểm</label>
                        <input class="form-control" type="text" id="LocationViecLam" name="LocationViecLam">
                        @Html.ValidationMessageFor(model => model.LocationViecLam, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label for="image4">Chọn hình <i style="color: rgb(122, 120, 120);font-weight: normal;">[tối đa 4 ảnh]</i></label>
                        <input type="file" value="" name="image4" id="image4" required title="Chọn đường dẫn hình ảnh" onchange="Images4FileAsURL()" multiple />
                        <div id="displayImg4">

                        </div>
                    </div>

                </div>
            </div>
            <hr>
            <div class="form-group">
                <div style="text-align: right">
                    <input type="submit" value="Thêm" id="Create" class="btn btn-success" />
                </div>
            </div>
        </div>

        <div class="NewsEX">
            <div class="khungMau">
                <h4>Tin đăng mẫu</h4>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a> Tuyển 4 nhân viên văn phòng và thị trường làm việc tại Hà Nội </a></p>
                    Công ty Du lịch Đất Việt cần tuyển 4 nhân viên văn phòng và thị trường, nam hoặc nữ, 22 - 45 tuổi, tốt nghiệp THPT, nhanh nhẹn, giao tiếp tốt, có kỹ năng bán hàng qua điện thoại. Có thể đi công tác xa nhà từ 1 - 2 tháng, lương thưởng và thời gian làm việc theo thỏa thuận.
                </div>
                <hr>
                <div class="Noidungmau">
                    <p>Tiêu đề: <a>Tuyển 5 nhân viên kinh doanh thực phẩm, lương thử việc 6.5tr</a></p>
                    Công ty Tiến Minh tuyển 5 nam/ nữ nhân viên kinh doanh ở TPHCM, ưu tiên có kinh nghiệm thực phẩm, trình độ trung cấp, lương thử việc 6,5 triệu (lương căn bản + phụ cấp + thưởng). Yêu cầu nộp hồ sơ đầy đủ, phỏng vấn trực tiếp.
                </div>
            </div>
        </div>
    </div>
</div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" id="Create" class="btn btn-default" style="display:none;" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(function () {
        $('.target').change(function () {
            if ($('.target').val == '0') {
                $('.response1').hide();
                $('.response2').hide();
                $('.response3').hide();
                $('.response0').hide();
                $('.response4').hide();
                $('.response5').hide();
                
                
            }
            else if ($('.target').val() == '1') {
                $('.response1').show();
                $('.response2').remove();
                $('.response3').remove();
                $('.response0').remove();
                $('.response4').remove();
                $('.response5').remove();
                $('.target').hide();
                $('#Create').show();
            }
            else if ($('.target').val() == '2') {
                $('.response1').remove();
                $('.response2').show();
                $('.response3').remove();
                $('.response0').remove();
                $('.response4').remove();
                $('.response5').show();
                $('.target').hide();
                $('#Create').show();
            }
            else if ($('.target').val() == '3') {
                $('.response1').remove();
                $('.response2').remove();
                $('.response3').show();
                $('.response0').remove();
                $('.response4').remove();
                $('.response5').show();
                $('.target').hide();
                $('#Create').show();
            }

            else if ($('.target').val() == '4') {
                $('.response1').remove();
                $('.response2').remove();
                $('.response3').remove();
                $('.response0').remove();
                $('.response4').show();
                $('.response5').show();
                $('.target').hide();
                $('#Create').show();
            }
        });
    });

   

    function Images1FileAsURL() {
        var fileSelected = document.getElementById('image1').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    document.getElementById('displayImg1').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

    function Images2FileAsURL() {
        var fileSelected = document.getElementById('image2').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    document.getElementById('displayImg2').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

    function Images3FileAsURL() {
        var fileSelected = document.getElementById('image3').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    document.getElementById('displayImg3').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

    function Images4FileAsURL() {
        var fileSelected = document.getElementById('image4').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    document.getElementById('displayImg4').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

    function clickDV() {
      

        $("#boxDV").hide();
        $("#boxVL").hide();
        $("#boxSP").hide();
        $("#boxBDS").hide();
        $('#LuaChon').val('2').trigger('change');
        
    }

    function clickVL() {

        
        $("#boxDV").hide();
        $("#boxVL").hide();
        $("#boxSP").hide();
        $("#boxBDS").hide();
        $('#LuaChon').val('4').trigger('change');


    }
    function clickSP() {

        
        $("#boxDV").hide();
        $("#boxVL").hide();
        $("#boxSP").hide();
        $("#boxBDS").hide();
        $('#LuaChon').val('1').trigger('change');


    }

    function clickBDS() {

        
        $("#boxDV").hide();
        $("#boxVL").hide();
        $("#boxSP").hide();
        $("#boxBDS").hide();
        $('#LuaChon').val('3').trigger('change');
    }

    

</script>
