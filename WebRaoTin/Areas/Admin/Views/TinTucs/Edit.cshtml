@model WebRaoTin.ViewModel.TinTucsViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "TinTucs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edit TinTuc</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LuaChon)
    @Html.HiddenFor(model => model.PublishDayTinTucs)
    @Html.HiddenFor(model => model.IdTinTucs)
    @Html.HiddenFor(model => model.IdViecLam)
    @Html.HiddenFor(model => model.IdSanPham)
    @Html.HiddenFor(model => model.IdDichVu)
    @Html.HiddenFor(model => model.IdBatDongSan)
    @Html.HiddenFor(model => model.NameBatDongSan)
    @Html.HiddenFor(model => model.NameDichVu)
    @Html.HiddenFor(model => model.NameSanPham)
    @Html.HiddenFor(model => model.NameViecLam)



    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.EndDayTinTucs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDayTinTucs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDayTinTucs, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Contract, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contract, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContractPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContractPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContractPhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-md-2" for="Status">Trạng thái:</label>

        <select class="target" id="Status" name="Status" aria-invalid="false">
            @if (Model.Status.Equals("Công khai"))
            {
                <option value="Công khai"> Công khai</option>
                <option value="Ẩn"> Ẩn</option>
            }
            else
            {
                <option value="Ẩn"> Ẩn</option>
                <option value="Công khai"> Công khai</option>
            }
        </select>

        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
    </div>

    @*
        Nếu tin tức được chọn là 1 sản phẩm. Thì LuaChon của nó = "1";
        Nếu tin tức được chọn là 1 dịch vụ. Thì LuaChon của nó = "2";
        Nếu tin tức được chọn là 1 bất động sản. Thì LuaChon của nó = "3";
        Nếu tin tức được chọn là 1 việc làm. Thì LuaChon của nó = "4";


    *@

    @if (Model.LuaChon.Equals("1"))
    {
        

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionSanPham, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionSanPham, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LuaChon">Chọn loại sản phẩm:</label>
            <select class="form-control valid" id="IdLoaiSanPham" name="IdLoaiSanPham" aria-invalid="false">
                @for (int i = 0; i < @ViewBag.SLLoaiSanPhams; i++)
                {
                    if (Model.IdLoaiSanPham.Equals(@ViewBag.LoaiSanPhams[i].Id))
                    {
                        <option value=@ViewBag.LoaiSanPhams[i].Id> @ViewBag.LoaiSanPhams[i].Name</option>
                    }

                }

                @for (int i = 0; i < @ViewBag.SLLoaiSanPhams; i++)
                {
                    if (Model.IdLoaiSanPham.Equals(@ViewBag.LoaiSanPhams[i].Id))
                    {
                        continue;
                    }
                    else
                    {
                        <option value=@ViewBag.LoaiSanPhams[i].Id> @ViewBag.LoaiSanPhams[i].Name</option>
                    }
                }
            </select>
            <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiSanPham" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceSanPham, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceSanPham, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationSanPham, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationSanPham, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" name="image1" id="image1" required title="Chọn đường dẫn hình ảnh" onchange="Images1FileAsURL()" multiple />
                <div id="displayImg1">
                    @foreach (var item in @ViewBag.HinhAnh)
                    {
                        <img src=@item id="@item">
                    }
                </div>
            </div>
        </div>


    }

    @* Dịch Vụ *@

    @if (Model.LuaChon.Equals("2"))
    {
       

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionDichVu, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionDichVu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LuaChon">Chọn loại dịch vụ:</label>
            <select class="form-control valid" id="IdLoaiDichVu" name="IdLoaiDichVu" aria-invalid="false">


                @for (int i = 0; i < @ViewBag.SLLoaiDichVus; i++)
                {
                    if (Model.IdLoaiDichVu.Equals(@ViewBag.LoaiDichVus[i].Id))
                    {
                        <option value=@ViewBag.LoaiDichVus[i].Id> @ViewBag.LoaiDichVus[i].Name</option>
                    }

                }

                @for (int i = 0; i < @ViewBag.SLLoaiDichVus; i++)
                {
                    if (Model.IdLoaiDichVu.Equals(@ViewBag.LoaiDichVus[i].Id))
                    {
                        continue;
                    }
                    else
                    {
                        <option value=@ViewBag.LoaiDichVus[i].Id> @ViewBag.LoaiDichVus[i].Name</option>
                    }
                }

            </select>
            <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiDichVu" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceDichVu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceDichVu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationDichVu, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationDichVu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" name="image2" id="image2" required title="Chọn đường dẫn hình ảnh" onchange="Images2FileAsURL()" multiple />
                <div id="displayImg2">
                    @foreach (var item in @ViewBag.HinhAnh)
                    {
                        <img src=@item id="@item">
                    }
                </div>
            </div>
        </div>
    }

    @* Bất động sản *@

    @if (Model.LuaChon.Equals("3"))
    {
       

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionBatDongSan, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionBatDongSan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LuaChon">Chọn loại bất động sản:</label>
            <select class="form-control valid" id="IdLoaiBatDongSan" name="IdLoaiBatDongSan" aria-invalid="false">


                @for (int i = 0; i < @ViewBag.SLLoaiBatDongSans; i++)
                {
                    if (Model.IdLoaiBatDongSan.Equals(@ViewBag.LoaiBatDongSans[i].Id))
                    {
                        <option value=@ViewBag.LoaiBatDongSans[i].Id> @ViewBag.LoaiBatDongSans[i].Name</option>
                    }

                }

                @for (int i = 0; i < @ViewBag.SLLoaiBatDongSans; i++)
                {
                    if (Model.IdLoaiBatDongSan.Equals(@ViewBag.LoaiBatDongSans[i].Id))
                    {
                        continue;
                    }
                    else
                    {
                        <option value=@ViewBag.LoaiBatDongSans[i].Id> @ViewBag.LoaiBatDongSans[i].Name</option>
                    }
                }

            </select>
            <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiBatDongSan" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriceBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceBatDongSan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceBatDongSan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationBatDongSan, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationBatDongSan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" name="image3" id="image3" required title="Chọn đường dẫn hình ảnh" onchange="Images3FileAsURL()" multiple />
                <div id="displayImg3">
                    @foreach (var item in @ViewBag.HinhAnh)
                    {
                        <img src=@item id="@item">
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VideoBatDongSan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="@Model.VideoBatDongSan" name="video" id="video" required title="Chọn đường dẫn Video" />
                <video style="width: 100%; height: auto" controls id="src_video3">
                    <source src="@Html.DisplayFor(model => Model.VideoBatDongSan)" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
            </div>
        </div>
    }

    @* Việc Làm *@

    @if (Model.LuaChon.Equals("4"))
    {
        

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptioViecLamn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptioViecLamn, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptioViecLamn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LuaChon">Chọn loại việc làm:</label>
            <select class="form-control valid" id="IdLoaiViecLam" name="IdLoaiViecLam" aria-invalid="false">


                @for (int i = 0; i < @ViewBag.SLLoaiViecLams; i++)
                {
                    if (Model.IdLoaiViecLam.Equals(@ViewBag.LoaiViecLams[i].Id))
                    {
                        <option value=@ViewBag.LoaiViecLams[i].Id> @ViewBag.LoaiViecLams[i].Name</option>
                        break;
                    }

                }

                @for (int i = 0; i < @ViewBag.SLLoaiViecLams; i++)
                {
                    if (Model.IdLoaiViecLam.Equals(@ViewBag.LoaiViecLams[i].Id))
                    {

                    }
                    else
                    {
                        <option value=@ViewBag.LoaiViecLams[i].Id> @ViewBag.LoaiViecLams[i].Name</option>
                    }
                }



            </select>
            <span class="field-validation-valid text-danger" data-valmsg-for="IdLoaiViecLam" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Require, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Require, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Require, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Benefit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Benefit, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Benefit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationViecLam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationViecLam, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationViecLam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageViecLam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" name="image4" id="image4" required title="Chọn đường dẫn hình ảnh" onchange="Images4FileAsURL()" multiple />
                <div id="displayImg4">
                    @foreach (var item in @ViewBag.HinhAnh)
                    {
                        <img src=@item id="@item">
                    }
                </div>
            </div>
        </div>
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
   src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"
    function Images1FileAsURL() {
        var fileSelected = document.getElementById('image1').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
             
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    //Tự thêm
                    
                    
                    document.getElementById('displayImg1').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }



    function Images2FileAsURL() {
        var fileSelected = document.getElementById('image2').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();



                fileReader.onload = function (fileLoaderEvent) {
                 
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    //Tự thêm
                    
                    
                    document.getElementById('displayImg2').innerHTML += newImage.outerHTML;
                }

                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

  

    function Images3FileAsURL() {
        var fileSelected = document.getElementById('image3').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');
                    newImage.src = srcData;
                    //Tự thêm
                    
                    document.getElementById('displayImg3').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

  

    function Images4FileAsURL() {
        var fileSelected = document.getElementById('image4').files;
        if (fileSelected.length > 0) {
            for (var i = 0; i < fileSelected.length; i++) {
                
                var fileToLoad = fileSelected[i];
                var fileReader = new FileReader();
                fileReader.onload = function (fileLoaderEvent) {
                    var srcData = fileLoaderEvent.target.result;
                    var newImage = document.createElement('img');

                    
                    newImage.src = srcData;
                    document.getElementById('displayImg4').innerHTML += newImage.outerHTML;
                }
                fileReader.readAsDataURL(fileToLoad);
            }

        }
    }

    

    $('document').ready(function () {
        $("#video").change(function () {
            if (this.files && this.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#src_video3').attr('src', e.target.result);
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
    });


</script>