@model WebRaoTin.Models.ApplicationUser
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .check-Gender {
        display: flex;
        padding-left: 20px;
    }

        .check-Gender label {
            margin-right: 20px;
            font-weight: normal;
        }

    .form-horizontal {
        width: 50%;
        margin: auto;
        border: 1px solid #dcdcdc;
        border-radius: 5px;
        padding-left: 30px;
        padding-right: 30px;
    }

    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

@if (User.Identity.IsAuthenticated)
{
    if (User.Identity.GetUserId().Equals(Model.Id))
    {
        using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2>Chỉnh sửa thông tin cá nhân</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.AccessFailedCount)
                @Html.HiddenFor(model => model.Claims)
                @Html.HiddenFor(model => model.EmailConfirmed)
                @Html.HiddenFor(model => model.LockoutEnabled)
                @Html.HiddenFor(model => model.LockoutEndDateUtc)
                @Html.HiddenFor(model => model.TwoFactorEnabled)
                @Html.HiddenFor(model => model.SecurityStamp)
                @Html.HiddenFor(model => model.PhoneNumberConfirmed)
                @Html.HiddenFor(model => model.PasswordHash)
                @Html.HiddenFor(model => model.Logins)
                @Html.HiddenFor(model => model.UserName)
                @Html.HiddenFor(model => model.DateJoin)
                @Html.HiddenFor(model => model.Role)


                <div class="form-group">
                    @*  @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        <label for="FullName">Họ Tên</label>
                        @* @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })*@
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*  @Html.LabelFor(model => model.HomeAdress, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        <label for="HomeAdress">Địa chỉ</label>
                        @Html.EditorFor(model => model.HomeAdress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomeAdress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*     @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @if (@Model.Gender == null)
                    {

                        <div class="check-Gender">
                            <label style="font-weight:bold">Giới Tính:</label>
                            <input id="Gender"
                                   name="Gender"
                                   type="radio"
                                   value="Nam" />
                            <label>Nam</label>
                            <input id="Gender"
                                   name="Gender"
                                   type="radio"
                                   value="Nữ" />
                            <label>Nữ</label>
                        </div>
                    }
                    else
                    {
                        if (@Model.Gender.Equals("Nam"))
                        {

                            <div class="check-Gender">
                                <label style="font-weight:bold">Giới Tính:</label>
                                <input checked="checked"
                                       id="Gender"
                                       name="Gender"
                                       type="radio"
                                       value="Nam" />
                                <label>Nam</label>

                                <input id="Gender"
                                       name="Gender"
                                       type="radio"
                                       value="Nữ" />
                                <label>Nữ</label>
                            </div>
                        }
                        else
                        {
                            <div class="check-Gender">
                                <label style="font-weight:bold">Giới Tính:</label>
                                <input id="Gender"
                                       name="Gender"
                                       type="radio"
                                       value="Nam" />
                                <label>Nam</label>


                                <input checked="checked"
                                       id="Gender"
                                       name="Gender"
                                       type="radio"
                                       value="Nữ" />
                                <label>Nam</label>
                            </div>
                        }
                    }
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @*  @Html.LabelFor(model => model.DateBorn, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        <label for="DateBorn">Ngày sinh</label>
                        @Html.EditorFor(model => model.DateBorn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateBorn, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @* @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        <label for="Status">Trạng thái</label>
                        @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                        {
                                            new SelectListItem() {Text = "Hoạt động", Value="Hoạt động"},
                                            new SelectListItem() {Text = "Đã khóa", Value="Đã khóa"}

                }, new { @class = "form-control", @Value = Model.Status })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*   @Html.LabelFor(m => m.CMND, new { @class = "col-md-2 control-label" })*@
                    <div class="col-md-10">
                        <label for="CMND">CMND(*)</label>
                        @Html.TextBoxFor(m => m.CMND, new { @class = "form-control", Type = "number", @placeholder = "CMND mới có 12 số...", @max = "999999999" })
                        @Html.ValidationMessageFor(model => model.CMND, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*  @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        <label for="Email">Email</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @*   @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })*@
                    <div class="col-md-10">
                        <label for="PhoneNumber">Số điện thoại (*)</label>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", Type = "number", @placeholder = "SDT có 10 số...", @max = "999999999" })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-10">
                        <button type="submit" class="btn btn-success" id="edit" name="edit">Lưu</button>
                    </div>
                </div>
            </div>
        }


    }

    else
    {
        <h1>TRANG NÀY KHÔNG TỒN TẠI</h1>
    }
}
else
{
    <h1>TRANG NÀY KHÔNG TỒN TẠI</h1>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@*Phải thêm link này vào mới có thông báo đẹp đc sử dụng swal *@
<script>
    $("#edit").click(function () {
        swal("Chỉnh sửa thành công!", "You clicked the button!", "success");
    });
</script>